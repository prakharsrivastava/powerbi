val toTimestampUDF = udf((timestampData: String) => {
      try {
        new java.sql.Timestamp(timestampData.toLong)
      } catch {
        case _: NumberFormatException => java.sql.Timestamp.valueOf(timestampData)
      }
    })
   val toTimestampUDF = udf((timestampData: Any) => timestampData match {
      case ts: Long => new java.sql.Timestamp(ts)
      case ts: String => java.sql.Timestamp.valueOf(ts)
      case _ => null
    })
udf { (timestampData: Column) =>
      when(timestampData.isNotNull, expr("""
        CASE
          WHEN IS_JSON_NUMBER(timestampData) THEN TO_TIMESTAMP(FROM_UNIXTIME(CAST(timestampData AS BIGINT)))
          WHEN IS_JSON_STRING(timestampData) THEN TO_TIMESTAMP(timestampData)
        END
      """)).otherwise(null)
    }
