import org.apache.spark.sql.{SparkSession, Row}
import org.apache.spark.sql.types._
import org.apache.spark.sql.functions._

// Sample data
val data = Seq(
  ("suszan kapoor", "[{\"label\": \"color\", \"value\": \"black\"}, {\"label\": \"gift\", \"value\": \"no\"}]")
)

import spark.implicits._

// Create DataFrame from sample data
val df = data.toDF("lastname", "demo")

// Define UDF to extract value based on label
val extractValueUDF = udf((jsonString: String, label: String) => {
  val jsonArr = jsonString.replaceAll("\\\\", "").stripPrefix("[").stripSuffix("]")
  val items = jsonArr.split("\\},\\s*\\{").map(_.replaceAll("[\\{\\}]", ""))
  val filtered = items.filter(_.contains(s""""label":"$label""""))
  if (filtered.isEmpty) null else {
    val value = filtered.head.split(",\\s*").find(_.contains("\"value\":")).map(_.split(":")(1).replaceAll("\"", "").trim)
    value.getOrElse(null)
  }
})

// Apply UDF to extract "color" value
val transformedDF = df.withColumn("color", extractValueUDF($"demo", lit("color")))

// Display the transformed DataFrame
transformedDF.show(false)
