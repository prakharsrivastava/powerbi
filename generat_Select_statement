import scala.collection.mutable.ListBuffer

object JsonIterator extends App {

  // Function to generate JSON based on column information and a range of values
  def generateJson(columnInfo: Map[String, Any], values: Range): List[Map[String, Any]] = {
    values.map { value =>
      columnInfo.map {
        case (columnName, columnValue) =>
          columnName -> (if (columnName == "value") s"${columnValue}_$value" else columnValue)
      }
    }.toList
  }

  // Example column information
  val columnInfo: Map[String, Any] = Map(
    "column-name" -> "value",
    "is-nullable" -> true,
    "column-type" -> "varchar(64)"
  )

  // Example range of values
  val valueRange: Range = 1 to 4

  // Generate JSON based on column information and range of values
  val generatedJson: List[Map[String, Any]] = generateJson(columnInfo, valueRange)

  // Print the generated JSON
  generatedJson.foreach(println)
}
